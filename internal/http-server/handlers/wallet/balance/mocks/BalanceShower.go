// Code generated by mockery v2.47.0. DO NOT EDIT.

package mocks

import (
	context "context"

	uuid "github.com/google/uuid"
	mock "github.com/stretchr/testify/mock"
)

// BalanceShower is an autogenerated mock type for the BalanceShower type
type BalanceShower struct {
	mock.Mock
}

// Balance provides a mock function with given fields: ctx, walletUuid
func (_m *BalanceShower) Balance(ctx context.Context, walletUuid uuid.UUID) (int64, error) {
	ret := _m.Called(ctx, walletUuid)

	if len(ret) == 0 {
		panic("no return value specified for Balance")
	}

	var r0 int64
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID) (int64, error)); ok {
		return rf(ctx, walletUuid)
	}
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID) int64); ok {
		r0 = rf(ctx, walletUuid)
	} else {
		r0 = ret.Get(0).(int64)
	}

	if rf, ok := ret.Get(1).(func(context.Context, uuid.UUID) error); ok {
		r1 = rf(ctx, walletUuid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewBalanceShower creates a new instance of BalanceShower. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewBalanceShower(t interface {
	mock.TestingT
	Cleanup(func())
}) *BalanceShower {
	mock := &BalanceShower{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
